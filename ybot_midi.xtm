;; Include guard
(if (and (defined? '*xtmlib-ybot-midi-loaded*) *xtmlib-ybot-midi-loaded*)
    (sys:load-escape "ybot_midi library already loaded"))
(define *xtmlib-ybot-midi-loaded* #f)

;; Dependencies
(sys:load "libs/external/rtmidi.xtm")

(bind-func midi_receive
  (let ((type:i8 0) (chan:i8 0) (a:i8 0) (b:i8 0))
    (lambda (time:double len:i64 msg:i8*)
      (set! type (>> (pref msg 0) 4))
      (set! chan (& (pref msg 0) 15))
      (set! a (pref msg 1))
      (set! b (pref msg 2))
      (println type chan a b)
      void)))

(bind-func midi_input_shazam:[midi_in_device*,i8*]*
  (lambda (portname:i8*)
    (let ((pdev:midi_in_device** (halloc)))
      (pset! pdev 0 (midi_new_indevice))
      (let ((num_ports (getInPortCount (pref pdev 0)))
            (i:i64 0))
        (dotimes (i num_ports)
          (if (= (strcmp portname (getInPortName (pref pdev 0) i)) (i64toi32 0))
              (let ((success (openInPort (pref pdev 0) i portname)))
                (if (= (i64toi32 0) success)
                    (begin
                      (midi_register_device (pref pdev 0) "midi_receive")
                      (printf "Successfully opened input port: %s\n" portname))
                    (printf "Failed to open input port: %s\n" portname))))))
      (pref pdev 0))))


(bind-func midi_output_shazam:[midi_out_device*,i8*]*
  (lambda (portname:i8*)
    (let ((pdev:midi_out_device** (halloc)))
      (pset! pdev 0 (midi_new_outdevice))
      (let ((num_ports (getOutPortCount (pref pdev 0)))
            (i:i64 0))
        (dotimes (i num_ports)
          (if (= (strcmp portname (getOutPortName (pref pdev 0) i)) (i64toi32 0))
              (let ((success (openOutPort (pref pdev 0) i portname)))
                (if (= (i64toi32 0) success)
                    (printf "Successfully opened output port: %s\n" portname)
                    (printf "Failed to open output port: %s\n" portname))))))
      (pref pdev 0))))


(set! *xtmlib-ybot-midi-loaded* #t)
